AWSTemplateFormatVersion: 2010-09-09
Description: Creates an S3 Bucket, IAM Roles & Policy, and SageMaker Notebook to work with Amazon Personalize.

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket to be created. Enter a unique bucket name and must have personalize in the title. (Ex:personalize-bucket227)

Resources:
  # Amazon S3 Bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      Tags:
        - Key: AppManagerCFNStackKey
          Value: !Ref 'AWS::StackId'

  # Amazon SageMaker Execution Role
  SageMakerIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
        - "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess"
        - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        - "arn:aws:iam::aws:policy/ComprehendFullAccess"
        - "arn:aws:iam::aws:policy/AmazonBedrockFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
      Policies:
        - PolicyName: ManageSelfPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:CreateRole"
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:DeleteRole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cloudformation:DescribeStacks"
                Resource: "*"
      Tags:
        - Key: AppManagerCFNStackKey
          Value: !Ref 'AWS::StackId'

  # Amazon Personalize Execution Role
  PersonalizeIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: personalize.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
        - "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess"
      Policies:
        - PolicyName: ManageSelfPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:CreateRole"
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:DeleteRole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cloudformation:DescribeStacks"
                Resource: "*"
      Tags:
        - Key: AppManagerCFNStackKey
          Value: !Ref 'AWS::StackId'

  # AWS Identity and Access Management - S3 Custom Access Policy
  AmazonS3BucketAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
              - !Sub "arn:aws:s3:::${BucketName}/*"
          - Effect: Allow
            Action:
              - "s3:GetObject*"
            Resource:
              - !Sub "arn:aws:s3:::elementalrodeo99-us-west-1/aim312"
              - !Sub "arn:aws:s3:::elementalrodeo99-us-west-1/aim312/*"
          - Effect: Allow
            Action:
              - "bedrock:*"
            Resource:
              - "*"
      Roles:
        - !Ref SageMakerIamRole
        - !Ref PersonalizeIamRole

  # Amazon S3 - S3 Bucket Policy
  PersonalizeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: 'PersonalizeS3BucketAccessPolicy'
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:ListBucket'
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
              - !Sub "arn:aws:s3:::${BucketName}/*"
            Principal:
              Service: personalize.amazonaws.com

  # SageMaker notebook
  NotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: "ml.m7i.8xlarge"
      NotebookInstanceName: recommendationsystem
      RoleArn: !GetAtt SageMakerIamRole.Arn
      VolumeSizeInGB: 10

  # SSM Parameter with the s3 bucket for personalize
  PersonalizeS3Bucket:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cloudformation/personalize-s3-bucket
      Type: String
      Value: !Ref BucketName
      Description: SSM Parameter containing the s3 bucket for Personalize Samples.
      Tags:
        Key: AppManagerCFNStackKey
        Value: !Ref 'AWS::StackId'

  # SSM Parameter with the IAM Role for personalize
  PersonalizeIAMRole:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cloudformation/personalize-iam-role-arn
      Type: String
      Value: !GetAtt PersonalizeIamRole.Arn
      Description: SSM Parameter containing the iam role arn for Personalize.
      Tags:
        Key: AppManagerCFNStackKey
        Value: !Ref 'AWS::StackId'

Outputs:
  S3Bucket:
    Value: !Ref BucketName
    Description: S3 Bucket for object storage
  NotebookInstance:
    Value: !Ref NotebookInstance
    Description: SageMaker Notebook Instance
  AppManagerUrl:
    Value: !Sub "https://console.aws.amazon.com/systems-manager/appmanager/application/AppManager-CFN-${AWS::StackName}"
    Description: AWS Systems Manager Application Manager for this stack
